## $Id: configure.in,v 3.35.2.1 2008/07/15 06:56:31 erk Exp $ 
## ---------------------------------------------------------------------------

## Process this file with autoconf to produce `configure'
## Init
AC_INIT([certi],[3.3.1cvs_br_Notif], [certi-devel@nongnu.org], [certi])
AC_PREREQ(2.53)

AC_REVISION($Revision: 3.35.2.1 $)
AC_CONFIG_SRCDIR(RTIG/RTIG.cc)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE

## Programs and system
AC_PROG_YACC
AM_PROG_LEX
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_CANONICAL_HOST
case $host in
     *cygwin*) 
       WITH_CYGWIN=" -DWITH_CYGWIN "
       ;;
esac

case $host in     
     # Check for RDTSC
	 *i686*|*i586*|*x86_64*)
	    AC_MSG_NOTICE([TSC enabled processor detected])
	    CXXFLAGS="$CXXFLAGS -DHAVE_TSC_CLOCK "
	    AM_CONDITIONAL([HAVE_TSC_CLOCK], [test true = true])	    
	    ;;   
	 *)
	    AM_CONDITIONAL([HAVE_TSC_CLOCK], [test true != true])
	 	AC_MSG_NOTICE([TSC support DISABLED on this arch])	 		    
	    ;; 		    
esac


AC_SUBST(WITH_CYGWIN)
AC_PROG_LIBTOOL
YACC="$YACC -d "

## Autoheader
AH_TEMPLATE([socklen_t], [Define the type for socklen_t])

## Unix / C++
ETR_SOCKET_NSL
TYPE_SOCKLEN_T
AC_FUNC_SELECT_ARGTYPES
AC_CXX_HAVE_NUMERIC_LIMITS

## Additional flags
CXXFLAGS="$CXXFLAGS -DRTI_USES_STD_FSTREAM "

# Check for posix RT lib containing clock_getres
AC_SEARCH_LIBS([clock_getres],[rt],[POSIX_LIBS="-lrt"],POSIX_LIBS="")
AM_CONDITIONAL([HAVE_POSIX_CLOCK], [test x$POSIX_LIBS != x])     
if test "$POSIX_LIBS" != ""; then
	CXXFLAGS="$CXXFLAGS -DHAVE_POSIX_CLOCK "		
	AC_MSG_NOTICE("OK found POSIX rt libs will compile PosixClock")
else 
    AC_MSG_WARN("clock_getres not found PosixClock won't be available")
fi

# X11
AC_PATH_XTRA

# check for X11 bitmaps 
# see bug #18888 : configure script does not check for x11-bitmaps header
# https://savannah.nongnu.org/bugs/index.php?18888
AC_CHECK_HEADERS([X11/bitmaps/cntr_ptr X11/bitmaps/dot X11/bitmaps/dropbar8 X11/bitmaps/left_ptr X11/bitmaps/right_ptr X11/bitmaps/menu16],[X11_BITMAPS_OK="yes"],[X11_BITMAPS_OK="no"])
AC_MSG_CHECKING([xbitmaps headers and libraries])
if test "$X11_BITMAPS_OK" = "yes"; then
     AC_MSG_RESULT([OK, X11 bitmaps headers])

     if test $no_x; then
    	AC_MSG_WARN([Some X11 files were not found]);
     else
	X_LIBRARY_PATH=$x_libraries
	XCFLAGS="$X_CFLAGS"	
	XLFLAGS="$X_LIBS"
	XLIBS="-lX11 -L$X_LIBRARY_PATH $X_EXTRA_LIBS"
	WITH_X11="-DWITH_X11"
	lib_search_path="$lib_search_path $XLFLAGS"
	inc_search_path="$inc_search_path $XCFLAGS"
	AC_SUBST(X_LIBRARY_PATH)
	AC_SUBST(XLIBS)
	AC_SUBST(XCFLAGS)
	AC_SUBST(WITH_X11)
     fi
else 
     AC_MSG_RESULT([NOK, billard test application will be text-only])      
     # Do as if X was not found it will be generate a "clean" billard compilation
     AC_DEFINE(X_DISPLAY_MISSING)     
fi

# XML
AC_CHECK_PROG(XML2_CONFIG, xml2-config, xml2-config)
if test "x$XML2_CONFIG" != x ; then
    XML_LIBS="`$XML2_CONFIG --libs`"
    XML_CFLAGS="`$XML2_CONFIG --cflags`"
    HAVE_XML="-DHAVE_XML"
fi
AC_SUBST(XML_LIBS)
AC_SUBST(XML_CFLAGS)
AC_SUBST(POSIX_LIBS)
AC_SUBST(HAVE_XML)


# Output
AC_OUTPUT([Makefile include/Makefile libCERTI/Makefile RTIG/Makefile
RTIA/Makefile libRTI/Makefile test/Makefile test/libgraphc/Makefile
test/Billard/Makefile test/utility/Makefile doc/Makefile
myCERTI_env.sh myCERTI_env.csh])
